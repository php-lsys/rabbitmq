<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto_dome/src/domeuser.proto

namespace Domefoo;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 *类注释:用户ITEM
 * </pre>
 *
 * Protobuf type <code>domefoo.UserDome</code>
 */
class UserDome extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     *用户ID
     * </pre>
     *
     * <code>int32 user_id = 1;</code>
     */
    private $user_id = 0;
    /**
     * <pre>
     *用户金额
     * </pre>
     *
     * <code>float user_money = 2;</code>
     */
    private $user_money = 0.0;
    /**
     * <pre>
     *用户身高
     * </pre>
     *
     * <code>double user_height = 3;</code>
     */
    private $user_height = 0.0;
    /**
     * <pre>
     *用户名
     * </pre>
     *
     * <code>string user_name = 4;</code>
     */
    private $user_name = '';
    /**
     * <pre>
     *用户类型,参见:UserType
     * </pre>
     *
     * <code>.domefoo.UserDomeType user_type = 6;</code>
     */
    private $user_type = 0;
    /**
     * <pre>
     *数组
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; attr = 71;</code>
     */
    private $attr;
    /**
     * <pre>
     *多个结果集
     * </pre>
     *
     * <code>repeated .domefoo.UserDomeItem user_items = 5;</code>
     */
    private $user_items;
    protected $my_oneof;

    public function __construct() {
        \GPBMetadata\ProtoDome\Src\Domeuser::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     *用户ID
     * </pre>
     *
     * <code>int32 user_id = 1;</code>
     */
    public function getUserId()
    {
        return $this->user_id;
    }

    /**
     * <pre>
     *用户ID
     * </pre>
     *
     * <code>int32 user_id = 1;</code>
     */
    public function setUserId($var)
    {
        GPBUtil::checkInt32($var);
        $this->user_id = $var;
    }

    /**
     * <pre>
     *用户金额
     * </pre>
     *
     * <code>float user_money = 2;</code>
     */
    public function getUserMoney()
    {
        return $this->user_money;
    }

    /**
     * <pre>
     *用户金额
     * </pre>
     *
     * <code>float user_money = 2;</code>
     */
    public function setUserMoney($var)
    {
        GPBUtil::checkFloat($var);
        $this->user_money = $var;
    }

    /**
     * <pre>
     *用户身高
     * </pre>
     *
     * <code>double user_height = 3;</code>
     */
    public function getUserHeight()
    {
        return $this->user_height;
    }

    /**
     * <pre>
     *用户身高
     * </pre>
     *
     * <code>double user_height = 3;</code>
     */
    public function setUserHeight($var)
    {
        GPBUtil::checkDouble($var);
        $this->user_height = $var;
    }

    /**
     * <pre>
     *用户名
     * </pre>
     *
     * <code>string user_name = 4;</code>
     */
    public function getUserName()
    {
        return $this->user_name;
    }

    /**
     * <pre>
     *用户名
     * </pre>
     *
     * <code>string user_name = 4;</code>
     */
    public function setUserName($var)
    {
        GPBUtil::checkString($var, True);
        $this->user_name = $var;
    }

    /**
     * <pre>
     *用户类型,参见:UserType
     * </pre>
     *
     * <code>.domefoo.UserDomeType user_type = 6;</code>
     */
    public function getUserType()
    {
        return $this->user_type;
    }

    /**
     * <pre>
     *用户类型,参见:UserType
     * </pre>
     *
     * <code>.domefoo.UserDomeType user_type = 6;</code>
     */
    public function setUserType($var)
    {
        GPBUtil::checkEnum($var, \Domefoo\UserDomeType::class);
        $this->user_type = $var;
    }

    /**
     * <pre>
     *类似C的union 字段one1
     * </pre>
     *
     * <code>int32 one1 = 51;</code>
     */
    public function getOne1()
    {
        return $this->readOneof(51);
    }

    /**
     * <pre>
     *类似C的union 字段one1
     * </pre>
     *
     * <code>int32 one1 = 51;</code>
     */
    public function setOne1($var)
    {
        GPBUtil::checkInt32($var);
        $this->writeOneof(51, $var);
    }

    /**
     * <pre>
     *类似C的union 字段one1
     * </pre>
     *
     * <code>int32 one2 = 52;</code>
     */
    public function getOne2()
    {
        return $this->readOneof(52);
    }

    /**
     * <pre>
     *类似C的union 字段one1
     * </pre>
     *
     * <code>int32 one2 = 52;</code>
     */
    public function setOne2($var)
    {
        GPBUtil::checkInt32($var);
        $this->writeOneof(52, $var);
    }

    /**
     * <pre>
     *数组
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; attr = 71;</code>
     */
    public function getAttr()
    {
        return $this->attr;
    }

    /**
     * <pre>
     *数组
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; attr = 71;</code>
     */
    public function setAttr(&$var)
    {
        $this->attr = $var;
    }

    /**
     * <pre>
     *多个结果集
     * </pre>
     *
     * <code>repeated .domefoo.UserDomeItem user_items = 5;</code>
     */
    public function getUserItems()
    {
        return $this->user_items;
    }

    /**
     * <pre>
     *多个结果集
     * </pre>
     *
     * <code>repeated .domefoo.UserDomeItem user_items = 5;</code>
     */
    public function setUserItems(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Domefoo\UserDomeItem::class);
        $this->user_items = $var;
    }

    public function getMyOneof()
    {
        return $this->my_oneof;
    }

}

